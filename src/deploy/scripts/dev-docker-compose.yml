# Use root/example as user/password credentials
version: '3'
services:
  core:
    container_name: core
    command: npm run start:prod
    image: core
#    restart: always
    environment:
      HTTP_SERVER_LOCAL_PORT: ${HTTP_SERVER_LOCAL_PORT:-3000}
      PG_HOST: ${PG_HOST:-postgres}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_HOST: ${REDIS_HOST:-redis}
      PG_CONTAINER_PORT: ${PG_CONTAINER_PORT:-5432}
      PG_USERNAME: ${PG_USERNAME:-postgres}
      PG_PASSWORD: ${PG_PASSWORD:-changeme}
      PG_DB: ${PG_DB:-myPostgresDb}
      DEBUG_MODE: ${DEBUG_MODE:-true}
      CLUSTER_MODE: ${CLUSTER_MODE:-true}
      RATE_LIMIT_TIME_MIN: ${RATE_LIMIT_TIME_MIN:-1}
      MAX_RATE_LIMIT: ${MAX_RATE_LIMIT:-20}
      CACHE_DURATION: ${CACHE_DURATION:-1}
      MAX_LOG_FILE_SIZE: ${MAX_LOG_FILE_SIZE:-50000000}
      RUN_MIGRATION: ${RUN_MIGRATION:-true}
    ports:
      - ${HTTP_SERVER_LOCAL_PORT:-3000}:${HTTP_SERVER_CONTAINER_PORT:-3000}
    depends_on:
      - "postgres"
      - "redis"
    networks:
      - api
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${PG_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWORD:-changeme}
      - POSTGRES_DB=${PG_DB:-myPostgresDb}
    ports:
      - ${PG_LOCAL_PORT:-5432}:${PG_CONTAINER_PORT:-5432}
    restart: always
    volumes:
      - POSTGRES_DB_DATA:/var/lib/postgresql/data
    networks:
      api:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      api:
volumes:
  POSTGRES_DB_DATA:

networks:
  api: