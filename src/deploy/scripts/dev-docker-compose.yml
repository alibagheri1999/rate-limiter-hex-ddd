# Use root/example as user/password credentials
version: '3'
services:
#  core:
#    build:
#      context: ./
#      dockerfile: /dev.Dockerfile
#    container_name: core
#    command: npm run start:dev
#    working_dir: /opt/web
#    image: core
#    restart: always
#    environment:
#      MONGO_HOST: mongo
#      MONGO_CONTAINER_PORT: ${MONGO_CONTAINER_PORT:-27017}
#      MONGO_USERNAME: ${MONGO_USERNAME:-root}
#      MONGO_PASSWORD: ${MONGO_PASSWORD:-example}
#      MONGO_DB: ${MONGO_DB:-myCollection}
#      HTTP_SERVER_LOCAL_PORT: ${HTTP_SERVER_LOCAL_PORT:-3000}
#      WEBSOCKET_SERVER_CONTAINER_PORT: ${WEBSOCKET_SERVER_CONTAINER_PORT:-4000}
#      GRPC_SERVER_CONTAINER_PORT: ${GRPC_SERVER_CONTAINER_PORT:-5000}
#      PG_HOST: ${PG_HOST:-postgres}
#      PG_CONTAINER_PORT: ${PG_CONTAINER_PORT:-5432}
#      PG_USERNAME: ${PG_USERNAME:-postgres}
#      PG_PASSWORD: ${PG_PASSWORD:-changeme}
#      PG_DB: ${PG_DB:-mypostgresdb}
#      DEBUG_MODE: ${DEBUG_MODE:-false}
#      CLUSTER_MODE: ${CLUSTER_MODE:-false}
#      RATE_LIMIT_TIME_MIN: ${RATE_LIMIT_TIME_MIN:-1}
#      MAX_RATE_LIMIT: ${MAX_RATE_LIMIT:-20}
#    volumes:
#      - ../..:/opt/web
#      - /otp/web/node_modules
#      - ..:/opt/web/src
#    ports:
#      - ${HTTP_SERVER_LOCAL_PORT:-3000}:${HTTP_SERVER_CONTAINER_PORT:-3000}
#      - ${WEBSOCKET_SERVER_LOCAL_PORT:-4000}:${WEBSOCKET_SERVER_CONTAINER_PORT:-4000}
#      - ${GRPC_SERVER_LOCAL_PORT:-6000}:${GRPC_SERVER_CONTAINER_PORT:-6000}
#      - ${DEBUG_PORT:-9229}:${DEBUG_PORT:-9229}
#    depends_on:
#      - "mongo"
#      - "postgres"
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${PG_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWORD:-changeme}
      - POSTGRES_DB=${PG_DB:-myPostgresDb}
    ports:
      - ${PG_LOCAL_PORT:-5432}:${PG_CONTAINER_PORT:-5432}
    restart: always
    volumes:
      - POSTGRES_DB_DATA:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
volumes:
  POSTGRES_DB_DATA: